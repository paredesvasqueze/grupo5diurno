@model IEnumerable<CancionArtista>
@{
    ViewData["Title"] = "Listado de Canciones-Artistas";
    Layout = "~/Views/Shared/_LayoutDashBoard.cshtml";
}

<h2>Listado de Canciones-Artistas</h2>

@if (Model != null && Model.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID Canción-Artista</th>
                <th>Nombre Canción</th>
                <th>Nombre Artista</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.nIdCancionArtista</td>
                    <td>@item.cNombreCancion</td>
                    <td>@item.cNombreArtista</td>
                    <td>
                        <button class="btn btn-warning" onclick="openEditModal(@item.nIdCancionArtista)">Editar</button>
                        <button class="btn btn-danger" onclick="deleteCancionArtista(@item.nIdCancionArtista)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" onclick="openModal()">Nueva Relación</button>
}
else
{
    <div class="alert alert-info" role="alert">
        No hay relaciones de Canción-Artista disponibles.
    </div>
}

<!-- Modal para Crear Relación Canción-Artista -->
<div class="modal fade" id="newCancionArtistaModal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Nueva Relación Canción-Artista</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="newCancionArtistaForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="cancion">Canción</label>
                        <select class="form-control" id="cancion" name="nIdCancion" required>
                            @if (ViewBag.Canciones != null && ((IEnumerable<Cancion>)ViewBag.Canciones).Any())
                            {
                                @foreach (var cancion in ViewBag.Canciones as IEnumerable<Cancion>)
                                {
                                    <option value="@cancion.nIdCancion">@cancion.cTitulo</option>
                                }
                            }
                            else
                            {
                                <option disabled>No hay canciones disponibles</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="artista">Artista</label>
                        <select class="form-control" id="artista" name="nIdArtista" required>
                            @if (ViewBag.Artistas != null && ((IEnumerable<Artista>)ViewBag.Artistas).Any())
                            {
                                @foreach (var artista in ViewBag.Artistas as IEnumerable<Artista>)
                                {
                                    <option value="@artista.nIdArtista">@artista.cNombreArtista</option>
                                }
                            }
                            else
                            {
                                <option disabled>No hay artistas disponibles</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="submitCancionArtista()">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal para Editar Relación Canción-Artista -->
<div class="modal fade" id="editCancionArtistaModal" tabindex="-1" role="dialog" aria-labelledby="editModalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalTitle">Editar Relación Canción-Artista</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="editCancionArtistaForm">
                <input type="hidden" id="editId" />
                <div class="modal-body">
                    <div class="form-group">
                        <label for="editCancion">Canción</label>
                        <select class="form-control" id="editCancion" name="nIdCancion" required>
                            @if (ViewBag.Canciones != null && ((IEnumerable<Cancion>)ViewBag.Canciones).Any())
                            {
                                @foreach (var cancion in ViewBag.Canciones as IEnumerable<Cancion>)
                                {
                                    <option value="@cancion.nIdCancion">@cancion.cTitulo</option>
                                }
                            }
                            else
                            {
                                <option disabled>No hay canciones disponibles</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editArtista">Artista</label>
                        <select class="form-control" id="editArtista" name="nIdArtista" required>
                            @if (ViewBag.Artistas != null && ((IEnumerable<Artista>)ViewBag.Artistas).Any())
                            {
                                @foreach (var artista in ViewBag.Artistas as IEnumerable<Artista>)
                                {
                                    <option value="@artista.nIdArtista">@artista.cNombreArtista</option>
                                }
                            }
                            else
                            {
                                <option disabled>No hay artistas disponibles</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="submitEditCancionArtista()">Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function openModal() {
            $('#newCancionArtistaModal').modal('show');
        }

        function openEditModal(id) {
            fetch(`/CancionArtista/GetCancionArtistaById/${id}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('editId').value = data.nIdCancionArtista;
                    document.getElementById('editCancion').value = data.nIdCancion;
                    document.getElementById('editArtista').value = data.nIdArtista;
                    $('#editCancionArtistaModal').modal('show');
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al cargar los datos de Cancion-Artista.');
                });
        }

        function submitCancionArtista() {
            const data = {
                nIdCancion: document.getElementById('cancion').value,
                nIdArtista: document.getElementById('artista').value
            };

            fetch('/CancionArtista', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
                .then(response => response.ok ? location.reload() : alert('Error al crear la relación Canción-Artista.'))
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al enviar los datos.');
                });
        }

        function submitEditCancionArtista() {
            const data = {
                nIdCancionArtista: document.getElementById('editId').value,
                nIdCancion: document.getElementById('editCancion').value,
                nIdArtista: document.getElementById('editArtista').value
            };

            fetch('/CancionArtista', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
                .then(response => response.ok ? location.reload() : alert('Error al editar la relación Canción-Artista.'))
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al enviar los datos.');
                });
        }

        function deleteCancionArtista(id) {
            fetch(`/CancionArtista/${id}`, {
                method: 'DELETE'
            })
                .then(response => response.ok ? location.reload() : alert('Error al eliminar la relación Canción-Artista.'))
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al enviar los datos.');
                });
        }
    </script>
}